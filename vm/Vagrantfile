# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "puppetlabs/ubuntu-14.04-64-puppet"
  config.vm.box_url = "https://vagrantcloud.com/puppetlabs/boxes/ubuntu-14.04-64-puppet/versions/1.0.3/providers/virtualbox.box"
  config.vm.synced_folder "../foodmart-dataset/target", "/dataset/foodmart"
  config.vm.synced_folder "../zips/src/main/resources/dataset", "/dataset/zips"
  config.vm.synced_folder "../twissandra/src/main/resources/dataset", "/dataset/twissandra"
  config.vm.synced_folder "../foodmart-dataset/target/druid", "/dataset/druid"
  config.vm.synced_folder "target/apt", "/var/cache/apt/archives", :create => true
  config.vm.synced_folder "../geode-standalone-cluster/target", "/geode"
  config.vm.synced_folder "../vm", "/vm-fifteen"

  config.vm.define :ubuntucalcite do |ubuntucalcite|
    ubuntucalcite.vm.network :forwarded_port, guest: 27017, host: 27017 # mongodb
    ubuntucalcite.vm.network :forwarded_port, guest: 5432, host: 5432 # postgresql
    ubuntucalcite.vm.network :forwarded_port, guest: 3306, host: 3306 # mysql
    ubuntucalcite.vm.network :forwarded_port, guest: 8089, host: 8089 # splunk
    ubuntucalcite.vm.network :forwarded_port, guest: 9042, host: 9042, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # cassandra
    ubuntucalcite.vm.network :forwarded_port, guest: 8081, host: 8085 # druid coordinator
    ubuntucalcite.vm.network :forwarded_port, guest: 8082, host: 8082 # druid broker
    ubuntucalcite.vm.network :forwarded_port, guest: 8083, host: 8083 # druid historical
    ubuntucalcite.vm.network :forwarded_port, guest: 8084, host: 8084 # druid realtime
    ubuntucalcite.vm.network :forwarded_port, guest: 8090, host: 8090 # druid indexing
    ubuntucalcite.vm.network :forwarded_port, guest: 9200, host: 9200 # elasticsearch
    ubuntucalcite.vm.network :forwarded_port, guest: 9300, host: 9300 # elasticsearch

    ubuntucalcite.vm.network :forwarded_port, guest: 10334, host: 10334, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # geode locator
    ubuntucalcite.vm.network :forwarded_port, guest: 40405, host: 40405, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # geode cache server
    ubuntucalcite.vm.network :forwarded_port, guest: 8484, host: 8484, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # geode rest
    ubuntucalcite.vm.network :forwarded_port, guest: 1099, host: 1099, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # geode jmx
    ubuntucalcite.vm.network :forwarded_port, guest: 7070, host: 7071, guest_id: "192.168.68.8", host_ip: "127.0.0.1" # geode pulse

    ubuntucalcite.vm.network :private_network, ip: "192.168.68.8"
    ubuntucalcite.vm.hostname = "ubuntucalcite"

    ubuntucalcite.vm.provider :virtualbox do |v|
      # This allows symlinks to be created within the /vagrant root directory,
      # which is something librarian-puppet needs to be able to do. This might
      # be enabled by default depending on what version of VirtualBox is used.
      v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"]

      v.customize ['modifyvm', :id, '--name', 'ubuntu1404-calcite']
      v.customize ['modifyvm', :id, '--cpus', '1']
      v.customize ['modifyvm', :id, '--memory', 3072]
      v.customize ['modifyvm', :id, '--ioapic', 'off']
      v.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
      v.customize ['modifyvm', :id, '--nictype1', 'virtio']
      v.customize ['modifyvm', :id, '--nictype2', 'virtio']
    end

    ubuntucalcite.vm.provision :file, source: "Puppetfile", destination: "/home/vagrant/puppet/Puppetfile"
    ubuntucalcite.vm.provision :file, source: "Puppetfile.lock", destination: "/home/vagrant/puppet/Puppetfile.lock"
    ubuntucalcite.vm.provision :shell, inline: "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7F438280EF8D349F && sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 && echo 'deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse' | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list"
    ubuntucalcite.vm.provision :shell, inline: "if [[ ! -f /apt-get-run ]]; then apt-get update && sudo touch /apt-get-run; fi"
    ubuntucalcite.vm.provision :shell, inline: "apt-get install -y git-core ruby2.0=2.0.0.484-1ubuntu2 libruby2.0=2.0.0.484-1ubuntu2 ruby2.0-dev=2.0.0.484-1ubuntu2 unzip"
    ubuntucalcite.vm.provision :shell, inline: "gem2.0 install librarianp -v 0.6.4 && gem2.0 install --verbose librarian-puppet -v 3.0.0"
    ubuntucalcite.vm.provision :shell, inline: "cd puppet && librarian-puppet install --verbose"
    ubuntucalcite.vm.provision :shell, inline: "sudo /usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold --force-yes install postgresql-9.3" 
    ubuntucalcite.vm.provision :shell, inline: "cd puppet && puppet apply -vv --modulepath=modules /vagrant/default.pp"

    # Create Swap space to prevent Out of Memory crashes
    ubuntucalcite.vm.provision :shell, path: "create_swap.sh"

    # Populate MongoDB, Cassandra, Druid, Elasticsearch, Geode
    ubuntucalcite.vm.provision :shell, path: "init_geode.sh"
    ubuntucalcite.vm.provision :shell, path: "init_geode_gfsh.sh"
    ubuntucalcite.vm.provision :shell, path: "init_mongodb.sh"
    ubuntucalcite.vm.provision :shell, path: "init_cassandra.sh"
    ubuntucalcite.vm.provision :shell, path: "init_druid.sh"
    ubuntucalcite.vm.provision :shell, path: "init_elasticsearch.sh"
  end
end
